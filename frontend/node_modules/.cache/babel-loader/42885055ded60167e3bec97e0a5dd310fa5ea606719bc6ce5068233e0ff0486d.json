{"ast":null,"code":"// This file contains functions to communicate with the backend API (FastAPI)\n// Each function sends a request to the backend and returns the result\nconst API=\"http://localhost:8000\";// Backend server address (changed to avoid conflict with frontend)\n// Start a new game by sending a POST request to /start\nexport async function startGame(){const res=await fetch(`${API}/start`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"}});return res.json();// Returns the initial game state\n}// Try to remove two numbers from the board\n// state: the current game state (board, remaining_adds)\n// pos1, pos2: [row, col] of the two cells to remove\nexport async function removeNumbers(state,pos1,pos2){// Send pos1 and pos2 as URL parameters, and the game state as the request body\nconst params=new URLSearchParams({pos1:JSON.stringify(pos1),pos2:JSON.stringify(pos2)});const res=await fetch(`${API}/remove?${params}`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(state)});return res.json();// Returns the updated game state\n}// Add a new set of numbers to the board (up to 5 times)\nexport async function addNumbers(state){let animation=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;const params=new URLSearchParams();if(animation){params.append('animation','true');}const res=await fetch(`${API}/add?${params}`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(state)});return res.json();// Returns the updated game state or animation states\n}","map":{"version":3,"names":["API","startGame","res","fetch","method","headers","json","removeNumbers","state","pos1","pos2","params","URLSearchParams","JSON","stringify","body","addNumbers","animation","arguments","length","undefined","append"],"sources":["/Users/gil-yoonhee/PycharmProjects/number_game/frontend/src/api/gameApi.js"],"sourcesContent":["// This file contains functions to communicate with the backend API (FastAPI)\n// Each function sends a request to the backend and returns the result\n\nconst API = \"http://localhost:8000\"; // Backend server address (changed to avoid conflict with frontend)\n\n// Start a new game by sending a POST request to /start\nexport async function startGame() {\n  const res = await fetch(`${API}/start`, { \n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  return res.json(); // Returns the initial game state\n}\n\n// Try to remove two numbers from the board\n// state: the current game state (board, remaining_adds)\n// pos1, pos2: [row, col] of the two cells to remove\nexport async function removeNumbers(state, pos1, pos2) {\n  // Send pos1 and pos2 as URL parameters, and the game state as the request body\n  const params = new URLSearchParams({\n    pos1: JSON.stringify(pos1),\n    pos2: JSON.stringify(pos2)\n  });\n  \n  const res = await fetch(`${API}/remove?${params}`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(state),\n  });\n  return res.json(); // Returns the updated game state\n}\n\n// Add a new set of numbers to the board (up to 5 times)\nexport async function addNumbers(state, animation = false) {\n  const params = new URLSearchParams();\n  if (animation) {\n    params.append('animation', 'true');\n  }\n  \n  const res = await fetch(`${API}/add?${params}`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(state),\n  });\n  return res.json(); // Returns the updated game state or animation states\n} "],"mappings":"AAAA;AACA;AAEA,KAAM,CAAAA,GAAG,CAAG,uBAAuB,CAAE;AAErC;AACA,MAAO,eAAe,CAAAC,SAASA,CAAA,CAAG,CAChC,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGH,GAAG,QAAQ,CAAE,CACtCI,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CACF,MAAO,CAAAH,GAAG,CAACI,IAAI,CAAC,CAAC,CAAE;AACrB,CAEA;AACA;AACA;AACA,MAAO,eAAe,CAAAC,aAAaA,CAACC,KAAK,CAAEC,IAAI,CAAEC,IAAI,CAAE,CACrD;AACA,KAAM,CAAAC,MAAM,CAAG,GAAI,CAAAC,eAAe,CAAC,CACjCH,IAAI,CAAEI,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,CAC1BC,IAAI,CAAEG,IAAI,CAACC,SAAS,CAACJ,IAAI,CAC3B,CAAC,CAAC,CAEF,KAAM,CAAAR,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGH,GAAG,WAAWW,MAAM,EAAE,CAAE,CACjDP,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CU,IAAI,CAAEF,IAAI,CAACC,SAAS,CAACN,KAAK,CAC5B,CAAC,CAAC,CACF,MAAO,CAAAN,GAAG,CAACI,IAAI,CAAC,CAAC,CAAE;AACrB,CAEA;AACA,MAAO,eAAe,CAAAU,UAAUA,CAACR,KAAK,CAAqB,IAAnB,CAAAS,SAAS,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,KAAK,CACvD,KAAM,CAAAP,MAAM,CAAG,GAAI,CAAAC,eAAe,CAAC,CAAC,CACpC,GAAIK,SAAS,CAAE,CACbN,MAAM,CAACU,MAAM,CAAC,WAAW,CAAE,MAAM,CAAC,CACpC,CAEA,KAAM,CAAAnB,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGH,GAAG,QAAQW,MAAM,EAAE,CAAE,CAC9CP,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CU,IAAI,CAAEF,IAAI,CAACC,SAAS,CAACN,KAAK,CAC5B,CAAC,CAAC,CACF,MAAO,CAAAN,GAAG,CAACI,IAAI,CAAC,CAAC,CAAE;AACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}