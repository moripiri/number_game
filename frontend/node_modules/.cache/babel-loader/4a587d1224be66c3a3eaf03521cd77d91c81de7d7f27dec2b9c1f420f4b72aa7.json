{"ast":null,"code":"// This file contains functions to communicate with the backend API (FastAPI)\n// Each function sends a request to the backend and returns the result\n\nconst API = \"http://localhost:8000\"; // Backend server address (changed to avoid conflict with frontend)\n\n// Start a new game by sending a POST request to /start\nexport async function startGame() {\n  console.log(\"Attempting to connect to:\", `${API}/start`);\n  try {\n    const res = await fetch(`${API}/start`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    console.log(\"Response status:\", res.status);\n    console.log(\"Response headers:\", res.headers);\n    return res.json(); // Returns the initial game state\n  } catch (error) {\n    console.error(\"Fetch error details:\", error);\n    throw error;\n  }\n}\n\n// Try to remove two numbers from the board\n// state: the current game state (board, remaining_adds)\n// pos1, pos2: [row, col] of the two cells to remove\nexport async function removeNumbers(state, pos1, pos2) {\n  // Send pos1 and pos2 as URL parameters, and the game state as the request body\n  const params = new URLSearchParams({\n    pos1: JSON.stringify(pos1),\n    pos2: JSON.stringify(pos2)\n  });\n  const res = await fetch(`${API}/remove?${params}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(state)\n  });\n  return res.json(); // Returns the updated game state\n}\n\n// Add a new set of numbers to the board (up to 5 times)\nexport async function addNumbers(state) {\n  const res = await fetch(`${API}/add`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(state)\n  });\n  return res.json(); // Returns the updated game state\n}","map":{"version":3,"names":["API","startGame","console","log","res","fetch","method","headers","status","json","error","removeNumbers","state","pos1","pos2","params","URLSearchParams","JSON","stringify","body","addNumbers"],"sources":["/Users/gil-yoonhee/PycharmProjects/number_game/frontend/src/api/gameApi.js"],"sourcesContent":["// This file contains functions to communicate with the backend API (FastAPI)\n// Each function sends a request to the backend and returns the result\n\nconst API = \"http://localhost:8000\"; // Backend server address (changed to avoid conflict with frontend)\n\n// Start a new game by sending a POST request to /start\nexport async function startGame() {\n  console.log(\"Attempting to connect to:\", `${API}/start`);\n  try {\n    const res = await fetch(`${API}/start`, { \n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    console.log(\"Response status:\", res.status);\n    console.log(\"Response headers:\", res.headers);\n    return res.json(); // Returns the initial game state\n  } catch (error) {\n    console.error(\"Fetch error details:\", error);\n    throw error;\n  }\n}\n\n// Try to remove two numbers from the board\n// state: the current game state (board, remaining_adds)\n// pos1, pos2: [row, col] of the two cells to remove\nexport async function removeNumbers(state, pos1, pos2) {\n  // Send pos1 and pos2 as URL parameters, and the game state as the request body\n  const params = new URLSearchParams({\n    pos1: JSON.stringify(pos1),\n    pos2: JSON.stringify(pos2)\n  });\n  \n  const res = await fetch(`${API}/remove?${params}`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(state),\n  });\n  return res.json(); // Returns the updated game state\n}\n\n// Add a new set of numbers to the board (up to 5 times)\nexport async function addNumbers(state) {\n  const res = await fetch(`${API}/add`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(state),\n  });\n  return res.json(); // Returns the updated game state\n} "],"mappings":"AAAA;AACA;;AAEA,MAAMA,GAAG,GAAG,uBAAuB,CAAC,CAAC;;AAErC;AACA,OAAO,eAAeC,SAASA,CAAA,EAAG;EAChCC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE,GAAGH,GAAG,QAAQ,CAAC;EACxD,IAAI;IACF,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGL,GAAG,QAAQ,EAAE;MACtCM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACFL,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEC,GAAG,CAACI,MAAM,CAAC;IAC3CN,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,GAAG,CAACG,OAAO,CAAC;IAC7C,OAAOH,GAAG,CAACK,IAAI,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdR,OAAO,CAACQ,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF;;AAEA;AACA;AACA;AACA,OAAO,eAAeC,aAAaA,CAACC,KAAK,EAAEC,IAAI,EAAEC,IAAI,EAAE;EACrD;EACA,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC;IACjCH,IAAI,EAAEI,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC;IAC1BC,IAAI,EAAEG,IAAI,CAACC,SAAS,CAACJ,IAAI;EAC3B,CAAC,CAAC;EAEF,MAAMV,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGL,GAAG,WAAWe,MAAM,EAAE,EAAE;IACjDT,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CY,IAAI,EAAEF,IAAI,CAACC,SAAS,CAACN,KAAK;EAC5B,CAAC,CAAC;EACF,OAAOR,GAAG,CAACK,IAAI,CAAC,CAAC,CAAC,CAAC;AACrB;;AAEA;AACA,OAAO,eAAeW,UAAUA,CAACR,KAAK,EAAE;EACtC,MAAMR,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGL,GAAG,MAAM,EAAE;IACpCM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CY,IAAI,EAAEF,IAAI,CAACC,SAAS,CAACN,KAAK;EAC5B,CAAC,CAAC;EACF,OAAOR,GAAG,CAACK,IAAI,CAAC,CAAC,CAAC,CAAC;AACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}