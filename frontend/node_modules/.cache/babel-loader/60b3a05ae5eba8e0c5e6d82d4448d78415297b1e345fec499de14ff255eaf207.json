{"ast":null,"code":"var _jsxFileName = \"/Users/gil-yoonhee/PycharmProjects/number_game/frontend/src/components/Board.jsx\";\nimport React from \"react\";\nimport NumberCell from \"./NumberCell\";\nimport \"./Board.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Board({\n  board,\n  onCellClick,\n  selectedCells,\n  isCellSelected,\n  shakeBoard,\n  removedCells,\n  successCells,\n  newCells = []\n}) {\n  // board가 없으면 로딩 표시\n  if (!board || !Array.isArray(board)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading board...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  }\n\n  // board가 비어있으면 빈 행을 생성해서 표시\n  const displayBoard = board.length === 0 ? [Array(9).fill(null)] : board;\n\n  // Combine shake animation class\n  const boardClass = `board-container ${shakeBoard ? 'shake' : ''}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: boardClass,\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: board.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map((num, j) => {\n            const cellKey = `${i},${j}`;\n            const isRemoved = removedCells.includes(cellKey);\n            const isSuccess = successCells.includes(cellKey);\n            const isNew = newCells.includes(cellKey);\n            return /*#__PURE__*/_jsxDEV(NumberCell, {\n              value: num,\n              row: i,\n              col: j,\n              onClick: onCellClick,\n              isSelected: isCellSelected(i, j),\n              isRemoved: isRemoved,\n              isSuccess: isSuccess,\n              isNew: isNew\n            }, j, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 19\n            }, this);\n          })\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c = Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","NumberCell","jsxDEV","_jsxDEV","Board","board","onCellClick","selectedCells","isCellSelected","shakeBoard","removedCells","successCells","newCells","Array","isArray","className","children","fileName","_jsxFileName","lineNumber","columnNumber","displayBoard","length","fill","boardClass","map","row","i","num","j","cellKey","isRemoved","includes","isSuccess","isNew","value","col","onClick","isSelected","_c","$RefreshReg$"],"sources":["/Users/gil-yoonhee/PycharmProjects/number_game/frontend/src/components/Board.jsx"],"sourcesContent":["import React from \"react\";\nimport NumberCell from \"./NumberCell\";\nimport \"./Board.css\";\n\nexport default function Board({ board, onCellClick, selectedCells, isCellSelected, shakeBoard, removedCells, successCells, newCells = [] }) {\n  // board가 없으면 로딩 표시\n  if (!board || !Array.isArray(board)) {\n    return (\n      <div className=\"board-container\">\n        <div className=\"loading\">Loading board...</div>\n      </div>\n    );\n  }\n\n  // board가 비어있으면 빈 행을 생성해서 표시\n  const displayBoard = board.length === 0 ? [Array(9).fill(null)] : board;\n\n  // Combine shake animation class\n  const boardClass = `board-container ${shakeBoard ? 'shake' : ''}`;\n\n  return (\n    <div className={boardClass}>\n      <table className=\"game-board\">\n        <tbody>\n          {board.map((row, i) => (\n            <tr key={i}>\n              {row.map((num, j) => {\n                const cellKey = `${i},${j}`;\n                const isRemoved = removedCells.includes(cellKey);\n                const isSuccess = successCells.includes(cellKey);\n                const isNew = newCells.includes(cellKey);\n                return (\n                  <NumberCell \n                    key={j} \n                    value={num} \n                    row={i} \n                    col={j}\n                    onClick={onCellClick}\n                    isSelected={isCellSelected(i, j)}\n                    isRemoved={isRemoved}\n                    isSuccess={isSuccess}\n                    isNew={isNew}\n                  />\n                );\n              })}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n} "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,eAAe,SAASC,KAAKA,CAAC;EAAEC,KAAK;EAAEC,WAAW;EAAEC,aAAa;EAAEC,cAAc;EAAEC,UAAU;EAAEC,YAAY;EAAEC,YAAY;EAAEC,QAAQ,GAAG;AAAG,CAAC,EAAE;EAC1I;EACA,IAAI,CAACP,KAAK,IAAI,CAACQ,KAAK,CAACC,OAAO,CAACT,KAAK,CAAC,EAAE;IACnC,oBACEF,OAAA;MAAKY,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9Bb,OAAA;QAAKY,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAEV;;EAEA;EACA,MAAMC,YAAY,GAAGhB,KAAK,CAACiB,MAAM,KAAK,CAAC,GAAG,CAACT,KAAK,CAAC,CAAC,CAAC,CAACU,IAAI,CAAC,IAAI,CAAC,CAAC,GAAGlB,KAAK;;EAEvE;EACA,MAAMmB,UAAU,GAAG,mBAAmBf,UAAU,GAAG,OAAO,GAAG,EAAE,EAAE;EAEjE,oBACEN,OAAA;IAAKY,SAAS,EAAES,UAAW;IAAAR,QAAA,eACzBb,OAAA;MAAOY,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC3Bb,OAAA;QAAAa,QAAA,EACGX,KAAK,CAACoB,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,kBAChBxB,OAAA;UAAAa,QAAA,EACGU,GAAG,CAACD,GAAG,CAAC,CAACG,GAAG,EAAEC,CAAC,KAAK;YACnB,MAAMC,OAAO,GAAG,GAAGH,CAAC,IAAIE,CAAC,EAAE;YAC3B,MAAME,SAAS,GAAGrB,YAAY,CAACsB,QAAQ,CAACF,OAAO,CAAC;YAChD,MAAMG,SAAS,GAAGtB,YAAY,CAACqB,QAAQ,CAACF,OAAO,CAAC;YAChD,MAAMI,KAAK,GAAGtB,QAAQ,CAACoB,QAAQ,CAACF,OAAO,CAAC;YACxC,oBACE3B,OAAA,CAACF,UAAU;cAETkC,KAAK,EAAEP,GAAI;cACXF,GAAG,EAAEC,CAAE;cACPS,GAAG,EAAEP,CAAE;cACPQ,OAAO,EAAE/B,WAAY;cACrBgC,UAAU,EAAE9B,cAAc,CAACmB,CAAC,EAAEE,CAAC,CAAE;cACjCE,SAAS,EAAEA,SAAU;cACrBE,SAAS,EAAEA,SAAU;cACrBC,KAAK,EAAEA;YAAM,GARRL,CAAC;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OASP,CAAC;UAEN,CAAC;QAAC,GAnBKO,CAAC;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAoBN,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACmB,EAAA,GA/CuBnC,KAAK;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}