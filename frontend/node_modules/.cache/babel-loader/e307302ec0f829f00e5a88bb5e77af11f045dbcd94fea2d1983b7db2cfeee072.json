{"ast":null,"code":"// This file contains functions to communicate with the backend API (FastAPI)\n// Each function sends a request to the backend and returns the result\n\nconst API = \"http://localhost:8000\"; // Backend server address (changed to avoid conflict with frontend)\n\n// Start a new game by sending a POST request to /start\nexport async function startGame() {\n  const res = await fetch(`${API}/start`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n\n  // Check if the response is successful\n  if (!res.ok) {\n    // If not successful, throw an error with the response\n    const errorData = await res.json();\n    const error = new Error(errorData.detail || 'Failed to start game');\n    error.response = res;\n    error.data = errorData;\n    throw error;\n  }\n  return res.json(); // Returns the initial game state\n}\n\n// Try to remove two numbers from the board\n// state: the current game state (board, remaining_adds)\n// pos1, pos2: [row, col] of the two cells to remove\nexport async function removeNumbers(state, pos1, pos2) {\n  // Send pos1 and pos2 as URL parameters, and the game state as the request body\n  const params = new URLSearchParams({\n    pos1: JSON.stringify(pos1),\n    pos2: JSON.stringify(pos2)\n  });\n  const res = await fetch(`${API}/remove?${params}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(state)\n  });\n\n  // Check if the response is successful\n  if (!res.ok) {\n    // If not successful, throw an error with the response\n    const errorData = await res.json();\n    const error = new Error(errorData.detail || 'Failed to remove numbers');\n    error.response = res;\n    error.data = errorData;\n    throw error;\n  }\n  return res.json(); // Returns the updated game state\n}\n\n// Add a new set of numbers to the board (up to 5 times)\nexport async function addNumbers(state) {\n  const res = await fetch(`${API}/add`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(state)\n  });\n\n  // Check if the response is successful\n  if (!res.ok) {\n    // If not successful, throw an error with the response\n    const errorData = await res.json();\n    const error = new Error(errorData.detail || 'Failed to add numbers');\n    error.response = res;\n    error.data = errorData;\n    throw error;\n  }\n  return res.json(); // Returns the updated game state\n}","map":{"version":3,"names":["API","startGame","res","fetch","method","headers","ok","errorData","json","error","Error","detail","response","data","removeNumbers","state","pos1","pos2","params","URLSearchParams","JSON","stringify","body","addNumbers"],"sources":["/Users/gil-yoonhee/PycharmProjects/number_game/frontend/src/api/gameApi.js"],"sourcesContent":["// This file contains functions to communicate with the backend API (FastAPI)\n// Each function sends a request to the backend and returns the result\n\nconst API = \"http://localhost:8000\"; // Backend server address (changed to avoid conflict with frontend)\n\n// Start a new game by sending a POST request to /start\nexport async function startGame() {\n  const res = await fetch(`${API}/start`, { \n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  \n  // Check if the response is successful\n  if (!res.ok) {\n    // If not successful, throw an error with the response\n    const errorData = await res.json();\n    const error = new Error(errorData.detail || 'Failed to start game');\n    error.response = res;\n    error.data = errorData;\n    throw error;\n  }\n  \n  return res.json(); // Returns the initial game state\n}\n\n// Try to remove two numbers from the board\n// state: the current game state (board, remaining_adds)\n// pos1, pos2: [row, col] of the two cells to remove\nexport async function removeNumbers(state, pos1, pos2) {\n  // Send pos1 and pos2 as URL parameters, and the game state as the request body\n  const params = new URLSearchParams({\n    pos1: JSON.stringify(pos1),\n    pos2: JSON.stringify(pos2)\n  });\n  \n  const res = await fetch(`${API}/remove?${params}`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(state),\n  });\n  \n  // Check if the response is successful\n  if (!res.ok) {\n    // If not successful, throw an error with the response\n    const errorData = await res.json();\n    const error = new Error(errorData.detail || 'Failed to remove numbers');\n    error.response = res;\n    error.data = errorData;\n    throw error;\n  }\n  \n  return res.json(); // Returns the updated game state\n}\n\n// Add a new set of numbers to the board (up to 5 times)\nexport async function addNumbers(state) {\n  const res = await fetch(`${API}/add`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(state),\n  });\n  \n  // Check if the response is successful\n  if (!res.ok) {\n    // If not successful, throw an error with the response\n    const errorData = await res.json();\n    const error = new Error(errorData.detail || 'Failed to add numbers');\n    error.response = res;\n    error.data = errorData;\n    throw error;\n  }\n  \n  return res.json(); // Returns the updated game state\n} "],"mappings":"AAAA;AACA;;AAEA,MAAMA,GAAG,GAAG,uBAAuB,CAAC,CAAC;;AAErC;AACA,OAAO,eAAeC,SAASA,CAAA,EAAG;EAChC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGH,GAAG,QAAQ,EAAE;IACtCI,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;;EAEF;EACA,IAAI,CAACH,GAAG,CAACI,EAAE,EAAE;IACX;IACA,MAAMC,SAAS,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;IAClC,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAACH,SAAS,CAACI,MAAM,IAAI,sBAAsB,CAAC;IACnEF,KAAK,CAACG,QAAQ,GAAGV,GAAG;IACpBO,KAAK,CAACI,IAAI,GAAGN,SAAS;IACtB,MAAME,KAAK;EACb;EAEA,OAAOP,GAAG,CAACM,IAAI,CAAC,CAAC,CAAC,CAAC;AACrB;;AAEA;AACA;AACA;AACA,OAAO,eAAeM,aAAaA,CAACC,KAAK,EAAEC,IAAI,EAAEC,IAAI,EAAE;EACrD;EACA,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC;IACjCH,IAAI,EAAEI,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC;IAC1BC,IAAI,EAAEG,IAAI,CAACC,SAAS,CAACJ,IAAI;EAC3B,CAAC,CAAC;EAEF,MAAMf,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGH,GAAG,WAAWkB,MAAM,EAAE,EAAE;IACjDd,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CiB,IAAI,EAAEF,IAAI,CAACC,SAAS,CAACN,KAAK;EAC5B,CAAC,CAAC;;EAEF;EACA,IAAI,CAACb,GAAG,CAACI,EAAE,EAAE;IACX;IACA,MAAMC,SAAS,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;IAClC,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAACH,SAAS,CAACI,MAAM,IAAI,0BAA0B,CAAC;IACvEF,KAAK,CAACG,QAAQ,GAAGV,GAAG;IACpBO,KAAK,CAACI,IAAI,GAAGN,SAAS;IACtB,MAAME,KAAK;EACb;EAEA,OAAOP,GAAG,CAACM,IAAI,CAAC,CAAC,CAAC,CAAC;AACrB;;AAEA;AACA,OAAO,eAAee,UAAUA,CAACR,KAAK,EAAE;EACtC,MAAMb,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGH,GAAG,MAAM,EAAE;IACpCI,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CiB,IAAI,EAAEF,IAAI,CAACC,SAAS,CAACN,KAAK;EAC5B,CAAC,CAAC;;EAEF;EACA,IAAI,CAACb,GAAG,CAACI,EAAE,EAAE;IACX;IACA,MAAMC,SAAS,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;IAClC,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAACH,SAAS,CAACI,MAAM,IAAI,uBAAuB,CAAC;IACpEF,KAAK,CAACG,QAAQ,GAAGV,GAAG;IACpBO,KAAK,CAACI,IAAI,GAAGN,SAAS;IACtB,MAAME,KAAK;EACb;EAEA,OAAOP,GAAG,CAACM,IAAI,CAAC,CAAC,CAAC,CAAC;AACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}