{"ast":null,"code":"import React from\"react\";import NumberCell from\"./NumberCell\";import\"./Board.css\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function Board(_ref){let{board,onCellClick,selectedCells,isCellSelected,shakeBoard,removedCells,successCells,newNumbers,emptyCells}=_ref;// board가 없거나 비어있으면 로딩 표시\nif(!board||!Array.isArray(board)||board.length===0){return/*#__PURE__*/_jsx(\"div\",{className:\"board-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading board...\"})});}// Combine shake animation class\nconst boardClass=`board-container ${shakeBoard?'shake':''}`;return/*#__PURE__*/_jsx(\"div\",{className:boardClass,children:/*#__PURE__*/_jsx(\"table\",{className:\"game-board\",children:/*#__PURE__*/_jsx(\"tbody\",{children:board.map((row,i)=>/*#__PURE__*/_jsx(\"tr\",{children:row.map((num,j)=>{const cellKey=`${i},${j}`;const isRemoved=removedCells.includes(cellKey);const isSuccess=successCells.includes(cellKey);const isNewNumber=newNumbers&&newNumbers.includes(cellKey);const isEmptyCell=emptyCells&&emptyCells.includes(cellKey);return/*#__PURE__*/_jsx(NumberCell,{value:num,row:i,col:j,onClick:onCellClick,isSelected:isCellSelected(i,j),isRemoved:isRemoved,isSuccess:isSuccess,isNewNumber:isNewNumber,isEmptyCell:isEmptyCell},j);})},i))})})});}","map":{"version":3,"names":["React","NumberCell","jsx","_jsx","Board","_ref","board","onCellClick","selectedCells","isCellSelected","shakeBoard","removedCells","successCells","newNumbers","emptyCells","Array","isArray","length","className","children","boardClass","map","row","i","num","j","cellKey","isRemoved","includes","isSuccess","isNewNumber","isEmptyCell","value","col","onClick","isSelected"],"sources":["/Users/gil-yoonhee/PycharmProjects/number_game/frontend/src/components/Board.jsx"],"sourcesContent":["import React from \"react\";\nimport NumberCell from \"./NumberCell\";\nimport \"./Board.css\";\n\nexport default function Board({ board, onCellClick, selectedCells, isCellSelected, shakeBoard, removedCells, successCells, newNumbers, emptyCells }) {\n  // board가 없거나 비어있으면 로딩 표시\n  if (!board || !Array.isArray(board) || board.length === 0) {\n    return (\n      <div className=\"board-container\">\n        <div className=\"loading\">Loading board...</div>\n      </div>\n    );\n  }\n\n  // Combine shake animation class\n  const boardClass = `board-container ${shakeBoard ? 'shake' : ''}`;\n\n  return (\n    <div className={boardClass}>\n      <table className=\"game-board\">\n        <tbody>\n          {board.map((row, i) => (\n            <tr key={i}>\n              {row.map((num, j) => {\n                const cellKey = `${i},${j}`;\n                const isRemoved = removedCells.includes(cellKey);\n                const isSuccess = successCells.includes(cellKey);\n                const isNewNumber = newNumbers && newNumbers.includes(cellKey);\n                const isEmptyCell = emptyCells && emptyCells.includes(cellKey);\n                \n                return (\n                  <NumberCell \n                    key={j} \n                    value={num} \n                    row={i} \n                    col={j}\n                    onClick={onCellClick}\n                    isSelected={isCellSelected(i, j)}\n                    isRemoved={isRemoved}\n                    isSuccess={isSuccess}\n                    isNewNumber={isNewNumber}\n                    isEmptyCell={isEmptyCell}\n                  />\n                );\n              })}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n} "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,UAAU,KAAM,cAAc,CACrC,MAAO,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAErB,cAAe,SAAS,CAAAC,KAAKA,CAAAC,IAAA,CAAwH,IAAvH,CAAEC,KAAK,CAAEC,WAAW,CAAEC,aAAa,CAAEC,cAAc,CAAEC,UAAU,CAAEC,YAAY,CAAEC,YAAY,CAAEC,UAAU,CAAEC,UAAW,CAAC,CAAAT,IAAA,CACjJ;AACA,GAAI,CAACC,KAAK,EAAI,CAACS,KAAK,CAACC,OAAO,CAACV,KAAK,CAAC,EAAIA,KAAK,CAACW,MAAM,GAAK,CAAC,CAAE,CACzD,mBACEd,IAAA,QAAKe,SAAS,CAAC,iBAAiB,CAAAC,QAAA,cAC9BhB,IAAA,QAAKe,SAAS,CAAC,SAAS,CAAAC,QAAA,CAAC,kBAAgB,CAAK,CAAC,CAC5C,CAAC,CAEV,CAEA;AACA,KAAM,CAAAC,UAAU,CAAG,mBAAmBV,UAAU,CAAG,OAAO,CAAG,EAAE,EAAE,CAEjE,mBACEP,IAAA,QAAKe,SAAS,CAAEE,UAAW,CAAAD,QAAA,cACzBhB,IAAA,UAAOe,SAAS,CAAC,YAAY,CAAAC,QAAA,cAC3BhB,IAAA,UAAAgB,QAAA,CACGb,KAAK,CAACe,GAAG,CAAC,CAACC,GAAG,CAAEC,CAAC,gBAChBpB,IAAA,OAAAgB,QAAA,CACGG,GAAG,CAACD,GAAG,CAAC,CAACG,GAAG,CAAEC,CAAC,GAAK,CACnB,KAAM,CAAAC,OAAO,CAAG,GAAGH,CAAC,IAAIE,CAAC,EAAE,CAC3B,KAAM,CAAAE,SAAS,CAAGhB,YAAY,CAACiB,QAAQ,CAACF,OAAO,CAAC,CAChD,KAAM,CAAAG,SAAS,CAAGjB,YAAY,CAACgB,QAAQ,CAACF,OAAO,CAAC,CAChD,KAAM,CAAAI,WAAW,CAAGjB,UAAU,EAAIA,UAAU,CAACe,QAAQ,CAACF,OAAO,CAAC,CAC9D,KAAM,CAAAK,WAAW,CAAGjB,UAAU,EAAIA,UAAU,CAACc,QAAQ,CAACF,OAAO,CAAC,CAE9D,mBACEvB,IAAA,CAACF,UAAU,EAET+B,KAAK,CAAER,GAAI,CACXF,GAAG,CAAEC,CAAE,CACPU,GAAG,CAAER,CAAE,CACPS,OAAO,CAAE3B,WAAY,CACrB4B,UAAU,CAAE1B,cAAc,CAACc,CAAC,CAAEE,CAAC,CAAE,CACjCE,SAAS,CAAEA,SAAU,CACrBE,SAAS,CAAEA,SAAU,CACrBC,WAAW,CAAEA,WAAY,CACzBC,WAAW,CAAEA,WAAY,EATpBN,CAUN,CAAC,CAEN,CAAC,CAAC,EAtBKF,CAuBL,CACL,CAAC,CACG,CAAC,CACH,CAAC,CACL,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}