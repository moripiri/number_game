{"ast":null,"code":"var _jsxFileName = \"/Users/gil-yoonhee/PycharmProjects/number_game/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { startGame, removeNumbers, addNumbers } from \"./api/gameApi\";\nimport Board from \"./components/Board\";\nimport Controls from \"./components/Controls\";\nimport soundEffects from \"./utils/soundEffects\";\nimport \"./App.css\";\n\n// Simple modal popup for game instructions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HowToPlayModal({\n  open,\n  onClose\n}) {\n  if (!open) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"How to Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"At the start, 4 of each number from 1 to 9 are randomly placed in a 4x9 board (36 numbers).\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"You can remove two numbers if they are \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"adjacent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 54\n          }, this), \" (including diagonals), or if there are no numbers between them (even across rows).\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"The two numbers must be \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"the same\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 39\n          }, this), \" or \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"sum to 10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 58\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"You can add a new set of 36 numbers up to 5 times using the Add Numbers button.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Click two numbers to try to remove them. If not removable, your selection will be cleared.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-modal\",\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = HowToPlayModal;\nexport default function App() {\n  _s();\n  // Game state\n  const [game, setGame] = useState(null);\n  const [selectedCells, setSelectedCells] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [showHowTo, setShowHowTo] = useState(false);\n  // Animation states\n  const [shakeBoard, setShakeBoard] = useState(false);\n  const [removedCells, setRemovedCells] = useState([]);\n  const [successCells, setSuccessCells] = useState([]);\n  const [addedCells, setAddedCells] = useState([]);\n  const [removedRows, setRemovedRows] = useState([]);\n  // Sound state\n  const [soundOn, setSoundOn] = useState(true);\n  // Previous board ref for row/added cell detection\n  const prevBoardRef = useRef(null);\n\n  // Checks if two selected cells can be removed (same number or sum to 10)\n  const canRemove = (cell1, cell2) => {\n    return cell1.value === cell2.value || cell1.value + cell2.value === 10;\n  };\n\n  // Toggle sound\n  const toggleSound = () => {\n    const newSoundOn = !soundOn;\n    setSoundOn(newSoundOn);\n    soundEffects.setMuted(!newSoundOn);\n  };\n\n  // Start a new game\n  const startNewGame = () => {\n    soundEffects.resume();\n    soundEffects.click();\n    setIsLoading(true);\n    setSelectedCells([]);\n    setAddedCells([]);\n    setRemovedRows([]);\n    setRemovedCells([]);\n    setSuccessCells([]);\n    startGame().then(data => {\n      setGame(data);\n      setIsLoading(false);\n      prevBoardRef.current = data.board.map(row => [...row]);\n    }).catch(error => {\n      console.error(\"Failed to start game:\", error);\n      setIsLoading(false);\n    });\n  };\n\n  // On mount, start a new game\n  useEffect(() => {\n    startNewGame();\n    // eslint-disable-next-line\n  }, []);\n\n  // Detect row deletion and added cells after board update\n  useEffect(() => {\n    if (!game || !game.board) return;\n    const prevBoard = prevBoardRef.current;\n    const currBoard = game.board;\n    // Detect row deletion\n    if (prevBoard && currBoard.length < prevBoard.length) {\n      // Find which rows were removed (by comparing row contents)\n      const removed = [];\n      for (let i = 0; i < prevBoard.length; ++i) {\n        if (!currBoard[i] || currBoard[i].length === 0) {\n          removed.push(i);\n        }\n      }\n      if (removed.length > 0) {\n        setRemovedRows(removed);\n        soundEffects.rowRemove();\n        setTimeout(() => setRemovedRows([]), 400);\n      }\n    }\n    // Detect added cells (after addNumbers)\n    if (prevBoard) {\n      const newAddedCells = [];\n      // New rows\n      for (let i = prevBoard.length; i < currBoard.length; ++i) {\n        for (let j = 0; j < currBoard[i].length; ++j) {\n          newAddedCells.push(`${i},${j}`);\n        }\n      }\n      // Existing last row: new cells appended\n      if (prevBoard.length > 0 && currBoard.length > 0) {\n        let lastRowIdx = prevBoard.length - 1;\n        let prevLen = prevBoard[lastRowIdx].length;\n        let newLen = currBoard[lastRowIdx].length;\n        for (let j = prevLen; j < newLen; ++j) {\n          newAddedCells.push(`${lastRowIdx},${j}`);\n        }\n        // None이었던 칸이 채워진 경우\n        for (let j = 0; j < Math.min(prevLen, newLen); ++j) {\n          if (prevBoard[lastRowIdx][j] === null && currBoard[lastRowIdx][j] !== null) {\n            newAddedCells.push(`${lastRowIdx},${j}`);\n          }\n        }\n      }\n      if (newAddedCells.length > 0) {\n        setAddedCells(newAddedCells);\n        soundEffects.add();\n        setTimeout(() => setAddedCells([]), 400);\n      }\n    }\n    // Always update prevBoardRef\n    prevBoardRef.current = currBoard.map(row => [...row]);\n  }, [game]);\n\n  // Cell click handler\n  const handleCellClick = (row, col) => {\n    if (!game || game.board[row][col] === null) return;\n    soundEffects.resume();\n    const cellKey = `${row},${col}`;\n    const isAlreadySelected = selectedCells.some(cell => cell.key === cellKey);\n    if (isAlreadySelected) {\n      soundEffects.click();\n      setSelectedCells(selectedCells.filter(cell => cell.key !== cellKey));\n    } else {\n      soundEffects.pop();\n      const newSelected = [...selectedCells, {\n        row,\n        col,\n        key: cellKey,\n        value: game.board[row][col]\n      }];\n      if (newSelected.length === 2) {\n        const [cell1, cell2] = newSelected;\n        if (canRemove(cell1, cell2)) {\n          soundEffects.success();\n          setSuccessCells([cell1.key, cell2.key]);\n          setTimeout(() => setSuccessCells([]), 500);\n          handleRemove([cell1.row, cell1.col], [cell2.row, cell2.col]);\n          setSelectedCells([]);\n        } else {\n          soundEffects.error();\n          setShakeBoard(true);\n          setTimeout(() => setShakeBoard(false), 500);\n          setSelectedCells([]);\n        }\n      } else {\n        setSelectedCells(newSelected);\n      }\n    }\n  };\n\n  // Remove handler\n  const handleRemove = (pos1, pos2) => {\n    const cell1Key = `${pos1[0]},${pos1[1]}`;\n    const cell2Key = `${pos2[0]},${pos2[1]}`;\n    setRemovedCells([cell1Key, cell2Key]);\n    removeNumbers(game, pos1, pos2).then(data => {\n      soundEffects.remove();\n      setGame(data);\n      setTimeout(() => setRemovedCells([]), 300);\n      if (data.game_won) {\n        soundEffects.win();\n        setTimeout(() => alert(\"Game Win! 🎉\"), 800);\n      }\n    }).catch(async error => {\n      let message = \"제거할 수 없습니다.\";\n      if (error && error.response) {\n        try {\n          const errJson = await error.response.json();\n          if (errJson && errJson.detail) message = errJson.detail;\n        } catch {}\n      }\n      alert(message);\n      setSelectedCells([]);\n      setRemovedCells([]);\n    });\n  };\n\n  // Add numbers handler\n  const handleAdd = () => {\n    soundEffects.resume();\n    soundEffects.click();\n    addNumbers(game).then(data => {\n      setGame(data);\n    });\n  };\n\n  // Helper to check if a cell is currently selected\n  const isCellSelected = (row, col) => {\n    return selectedCells.some(cell => cell.row === row && cell.col === col);\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `sound-toggle-btn${soundOn ? \"\" : \" sound-off\"}`,\n      onClick: toggleSound,\n      title: soundOn ? \"효과음 끄기\" : \"효과음 켜기\",\n      \"aria-label\": soundOn ? \"효과음 끄기\" : \"효과음 켜기\",\n      children: soundOn ? \"🔊\" : \"🔇\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"howto-btn\",\n      onClick: () => {\n        soundEffects.resume();\n        soundEffects.click();\n        setShowHowTo(true);\n      },\n      title: \"How to Play\",\n      children: \"?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HowToPlayModal, {\n      open: showHowTo,\n      onClose: () => setShowHowTo(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"game-title\",\n      children: \"Number Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-game-button\",\n        onClick: startNewGame,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), game && /*#__PURE__*/_jsxDEV(Controls, {\n        remaining: game.remaining_adds,\n        onAdd: handleAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      board: (game === null || game === void 0 ? void 0 : game.board) || [],\n      onCellClick: handleCellClick,\n      selectedCells: selectedCells,\n      isCellSelected: isCellSelected,\n      shakeBoard: shakeBoard,\n      removedCells: removedCells,\n      successCells: successCells,\n      addedCells: addedCells,\n      removedRows: removedRows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"epSM5nMhYLGO8iNejqY08KmZoTY=\");\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"HowToPlayModal\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","startGame","removeNumbers","addNumbers","Board","Controls","soundEffects","jsxDEV","_jsxDEV","HowToPlayModal","open","onClose","className","onClick","children","e","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","game","setGame","selectedCells","setSelectedCells","isLoading","setIsLoading","showHowTo","setShowHowTo","shakeBoard","setShakeBoard","removedCells","setRemovedCells","successCells","setSuccessCells","addedCells","setAddedCells","removedRows","setRemovedRows","soundOn","setSoundOn","prevBoardRef","canRemove","cell1","cell2","value","toggleSound","newSoundOn","setMuted","startNewGame","resume","click","then","data","current","board","map","row","catch","error","console","prevBoard","currBoard","length","removed","i","push","rowRemove","setTimeout","newAddedCells","j","lastRowIdx","prevLen","newLen","Math","min","add","handleCellClick","col","cellKey","isAlreadySelected","some","cell","key","filter","pop","newSelected","success","handleRemove","pos1","pos2","cell1Key","cell2Key","remove","game_won","win","alert","message","response","errJson","json","detail","handleAdd","isCellSelected","title","remaining","remaining_adds","onAdd","onCellClick","_c2","$RefreshReg$"],"sources":["/Users/gil-yoonhee/PycharmProjects/number_game/frontend/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { startGame, removeNumbers, addNumbers } from \"./api/gameApi\";\nimport Board from \"./components/Board\";\nimport Controls from \"./components/Controls\";\nimport soundEffects from \"./utils/soundEffects\";\nimport \"./App.css\";\n\n// Simple modal popup for game instructions\nfunction HowToPlayModal({ open, onClose }) {\n  if (!open) return null;\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n        <h2>How to Play</h2>\n        <ul>\n          <li>At the start, 4 of each number from 1 to 9 are randomly placed in a 4x9 board (36 numbers).</li>\n          <li>You can remove two numbers if they are <b>adjacent</b> (including diagonals), or if there are no numbers between them (even across rows).</li>\n          <li>The two numbers must be <b>the same</b> or <b>sum to 10</b>.</li>\n          <li>You can add a new set of 36 numbers up to 5 times using the Add Numbers button.</li>\n          <li>Click two numbers to try to remove them. If not removable, your selection will be cleared.</li>\n        </ul>\n        <button className=\"close-modal\" onClick={onClose}>Close</button>\n      </div>\n    </div>\n  );\n}\n\nexport default function App() {\n  // Game state\n  const [game, setGame] = useState(null);\n  const [selectedCells, setSelectedCells] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [showHowTo, setShowHowTo] = useState(false);\n  // Animation states\n  const [shakeBoard, setShakeBoard] = useState(false);\n  const [removedCells, setRemovedCells] = useState([]);\n  const [successCells, setSuccessCells] = useState([]);\n  const [addedCells, setAddedCells] = useState([]);\n  const [removedRows, setRemovedRows] = useState([]);\n  // Sound state\n  const [soundOn, setSoundOn] = useState(true);\n  // Previous board ref for row/added cell detection\n  const prevBoardRef = useRef(null);\n\n  // Checks if two selected cells can be removed (same number or sum to 10)\n  const canRemove = (cell1, cell2) => {\n    return cell1.value === cell2.value || cell1.value + cell2.value === 10;\n  };\n\n  // Toggle sound\n  const toggleSound = () => {\n    const newSoundOn = !soundOn;\n    setSoundOn(newSoundOn);\n    soundEffects.setMuted(!newSoundOn);\n  };\n\n  // Start a new game\n  const startNewGame = () => {\n    soundEffects.resume();\n    soundEffects.click();\n    setIsLoading(true);\n    setSelectedCells([]);\n    setAddedCells([]);\n    setRemovedRows([]);\n    setRemovedCells([]);\n    setSuccessCells([]);\n    startGame().then((data) => {\n      setGame(data);\n      setIsLoading(false);\n      prevBoardRef.current = data.board.map(row => [...row]);\n    }).catch((error) => {\n      console.error(\"Failed to start game:\", error);\n      setIsLoading(false);\n    });\n  };\n\n  // On mount, start a new game\n  useEffect(() => {\n    startNewGame();\n    // eslint-disable-next-line\n  }, []);\n\n  // Detect row deletion and added cells after board update\n  useEffect(() => {\n    if (!game || !game.board) return;\n    const prevBoard = prevBoardRef.current;\n    const currBoard = game.board;\n    // Detect row deletion\n    if (prevBoard && currBoard.length < prevBoard.length) {\n      // Find which rows were removed (by comparing row contents)\n      const removed = [];\n      for (let i = 0; i < prevBoard.length; ++i) {\n        if (!currBoard[i] || currBoard[i].length === 0) {\n          removed.push(i);\n        }\n      }\n      if (removed.length > 0) {\n        setRemovedRows(removed);\n        soundEffects.rowRemove();\n        setTimeout(() => setRemovedRows([]), 400);\n      }\n    }\n    // Detect added cells (after addNumbers)\n    if (prevBoard) {\n      const newAddedCells = [];\n      // New rows\n      for (let i = prevBoard.length; i < currBoard.length; ++i) {\n        for (let j = 0; j < currBoard[i].length; ++j) {\n          newAddedCells.push(`${i},${j}`);\n        }\n      }\n      // Existing last row: new cells appended\n      if (prevBoard.length > 0 && currBoard.length > 0) {\n        let lastRowIdx = prevBoard.length - 1;\n        let prevLen = prevBoard[lastRowIdx].length;\n        let newLen = currBoard[lastRowIdx].length;\n        for (let j = prevLen; j < newLen; ++j) {\n          newAddedCells.push(`${lastRowIdx},${j}`);\n        }\n        // None이었던 칸이 채워진 경우\n        for (let j = 0; j < Math.min(prevLen, newLen); ++j) {\n          if (prevBoard[lastRowIdx][j] === null && currBoard[lastRowIdx][j] !== null) {\n            newAddedCells.push(`${lastRowIdx},${j}`);\n          }\n        }\n      }\n      if (newAddedCells.length > 0) {\n        setAddedCells(newAddedCells);\n        soundEffects.add();\n        setTimeout(() => setAddedCells([]), 400);\n      }\n    }\n    // Always update prevBoardRef\n    prevBoardRef.current = currBoard.map(row => [...row]);\n  }, [game]);\n\n  // Cell click handler\n  const handleCellClick = (row, col) => {\n    if (!game || game.board[row][col] === null) return;\n    soundEffects.resume();\n    const cellKey = `${row},${col}`;\n    const isAlreadySelected = selectedCells.some(cell => cell.key === cellKey);\n    if (isAlreadySelected) {\n      soundEffects.click();\n      setSelectedCells(selectedCells.filter(cell => cell.key !== cellKey));\n    } else {\n      soundEffects.pop();\n      const newSelected = [...selectedCells, { row, col, key: cellKey, value: game.board[row][col] }];\n      if (newSelected.length === 2) {\n        const [cell1, cell2] = newSelected;\n        if (canRemove(cell1, cell2)) {\n          soundEffects.success();\n          setSuccessCells([cell1.key, cell2.key]);\n          setTimeout(() => setSuccessCells([]), 500);\n          handleRemove([cell1.row, cell1.col], [cell2.row, cell2.col]);\n          setSelectedCells([]);\n        } else {\n          soundEffects.error();\n          setShakeBoard(true);\n          setTimeout(() => setShakeBoard(false), 500);\n          setSelectedCells([]);\n        }\n      } else {\n        setSelectedCells(newSelected);\n      }\n    }\n  };\n\n  // Remove handler\n  const handleRemove = (pos1, pos2) => {\n    const cell1Key = `${pos1[0]},${pos1[1]}`;\n    const cell2Key = `${pos2[0]},${pos2[1]}`;\n    setRemovedCells([cell1Key, cell2Key]);\n    removeNumbers(game, pos1, pos2)\n      .then((data) => {\n        soundEffects.remove();\n        setGame(data);\n        setTimeout(() => setRemovedCells([]), 300);\n        if (data.game_won) {\n          soundEffects.win();\n          setTimeout(() => alert(\"Game Win! 🎉\"), 800);\n        }\n      })\n      .catch(async (error) => {\n        let message = \"제거할 수 없습니다.\";\n        if (error && error.response) {\n          try {\n            const errJson = await error.response.json();\n            if (errJson && errJson.detail) message = errJson.detail;\n          } catch {}\n        }\n        alert(message);\n        setSelectedCells([]);\n        setRemovedCells([]);\n      });\n  };\n\n  // Add numbers handler\n  const handleAdd = () => {\n    soundEffects.resume();\n    soundEffects.click();\n    addNumbers(game).then((data) => {\n      setGame(data);\n    });\n  };\n\n  // Helper to check if a cell is currently selected\n  const isCellSelected = (row, col) => {\n    return selectedCells.some(cell => cell.row === row && cell.col === col);\n  };\n\n  if (isLoading) return <div className=\"loading\">Loading...</div>;\n\n  return (\n    <div className=\"app\">\n      {/* Sound toggle button at top right, left of How to Play */}\n      <button\n        className={`sound-toggle-btn${soundOn ? \"\" : \" sound-off\"}`}\n        onClick={toggleSound}\n        title={soundOn ? \"효과음 끄기\" : \"효과음 켜기\"}\n        aria-label={soundOn ? \"효과음 끄기\" : \"효과음 켜기\"}\n      >\n        {soundOn ? \"🔊\" : \"🔇\"}\n      </button>\n      {/* How to Play button at top right */}\n      <button \n        className=\"howto-btn\" \n        onClick={() => {\n          soundEffects.resume();\n          soundEffects.click();\n          setShowHowTo(true);\n        }} \n        title=\"How to Play\"\n      >\n        ?\n      </button>\n      <HowToPlayModal open={showHowTo} onClose={() => setShowHowTo(false)} />\n      <h1 className=\"game-title\">Number Game</h1>\n      <div className=\"controls-row\">\n        <button className=\"new-game-button\" onClick={startNewGame}>New Game</button>\n        {game && <Controls remaining={game.remaining_adds} onAdd={handleAdd} />}\n      </div>\n      <Board \n        board={game?.board || []} \n        onCellClick={handleCellClick}\n        selectedCells={selectedCells}\n        isCellSelected={isCellSelected}\n        shakeBoard={shakeBoard}\n        removedCells={removedCells}\n        successCells={successCells}\n        addedCells={addedCells}\n        removedRows={removedRows}\n      />\n    </div>\n  );\n} "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,SAAS,EAAEC,aAAa,EAAEC,UAAU,QAAQ,eAAe;AACpE,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAO,WAAW;;AAElB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,cAAcA,CAAC;EAAEC,IAAI;EAAEC;AAAQ,CAAC,EAAE;EACzC,IAAI,CAACD,IAAI,EAAE,OAAO,IAAI;EACtB,oBACEF,OAAA;IAAKI,SAAS,EAAC,eAAe;IAACC,OAAO,EAAEF,OAAQ;IAAAG,QAAA,eAC9CN,OAAA;MAAKI,SAAS,EAAC,eAAe;MAACC,OAAO,EAAEE,CAAC,IAAIA,CAAC,CAACC,eAAe,CAAC,CAAE;MAAAF,QAAA,gBAC/DN,OAAA;QAAAM,QAAA,EAAI;MAAW;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBZ,OAAA;QAAAM,QAAA,gBACEN,OAAA;UAAAM,QAAA,EAAI;QAA2F;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpGZ,OAAA;UAAAM,QAAA,GAAI,yCAAuC,eAAAN,OAAA;YAAAM,QAAA,EAAG;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,uFAAmF;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClJZ,OAAA;UAAAM,QAAA,GAAI,0BAAwB,eAAAN,OAAA;YAAAM,QAAA,EAAG;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,QAAI,eAAAZ,OAAA;YAAAM,QAAA,EAAG;UAAS;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,KAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrEZ,OAAA;UAAAM,QAAA,EAAI;QAA+E;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxFZ,OAAA;UAAAM,QAAA,EAAI;QAA0F;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjG,CAAC,eACLZ,OAAA;QAAQI,SAAS,EAAC,aAAa;QAACC,OAAO,EAAEF,OAAQ;QAAAG,QAAA,EAAC;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACC,EAAA,GAjBQZ,cAAc;AAmBvB,eAAe,SAASa,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAAC2B,aAAa,EAAEC,gBAAgB,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC6B,SAAS,EAAEC,YAAY,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAAC+B,SAAS,EAAEC,YAAY,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EACjD;EACA,MAAM,CAACiC,UAAU,EAAEC,aAAa,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACmC,YAAY,EAAEC,eAAe,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACqC,YAAY,EAAEC,eAAe,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACuC,UAAU,EAAEC,aAAa,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACyC,WAAW,EAAEC,cAAc,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EAClD;EACA,MAAM,CAAC2C,OAAO,EAAEC,UAAU,CAAC,GAAG5C,QAAQ,CAAC,IAAI,CAAC;EAC5C;EACA,MAAM6C,YAAY,GAAG5C,MAAM,CAAC,IAAI,CAAC;;EAEjC;EACA,MAAM6C,SAAS,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IAClC,OAAOD,KAAK,CAACE,KAAK,KAAKD,KAAK,CAACC,KAAK,IAAIF,KAAK,CAACE,KAAK,GAAGD,KAAK,CAACC,KAAK,KAAK,EAAE;EACxE,CAAC;;EAED;EACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,UAAU,GAAG,CAACR,OAAO;IAC3BC,UAAU,CAACO,UAAU,CAAC;IACtB5C,YAAY,CAAC6C,QAAQ,CAAC,CAACD,UAAU,CAAC;EACpC,CAAC;;EAED;EACA,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzB9C,YAAY,CAAC+C,MAAM,CAAC,CAAC;IACrB/C,YAAY,CAACgD,KAAK,CAAC,CAAC;IACpBzB,YAAY,CAAC,IAAI,CAAC;IAClBF,gBAAgB,CAAC,EAAE,CAAC;IACpBY,aAAa,CAAC,EAAE,CAAC;IACjBE,cAAc,CAAC,EAAE,CAAC;IAClBN,eAAe,CAAC,EAAE,CAAC;IACnBE,eAAe,CAAC,EAAE,CAAC;IACnBpC,SAAS,CAAC,CAAC,CAACsD,IAAI,CAAEC,IAAI,IAAK;MACzB/B,OAAO,CAAC+B,IAAI,CAAC;MACb3B,YAAY,CAAC,KAAK,CAAC;MACnBe,YAAY,CAACa,OAAO,GAAGD,IAAI,CAACE,KAAK,CAACC,GAAG,CAACC,GAAG,IAAI,CAAC,GAAGA,GAAG,CAAC,CAAC;IACxD,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;MAClBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CjC,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACJ,CAAC;;EAED;EACA/B,SAAS,CAAC,MAAM;IACdsD,YAAY,CAAC,CAAC;IACd;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAtD,SAAS,CAAC,MAAM;IACd,IAAI,CAAC0B,IAAI,IAAI,CAACA,IAAI,CAACkC,KAAK,EAAE;IAC1B,MAAMM,SAAS,GAAGpB,YAAY,CAACa,OAAO;IACtC,MAAMQ,SAAS,GAAGzC,IAAI,CAACkC,KAAK;IAC5B;IACA,IAAIM,SAAS,IAAIC,SAAS,CAACC,MAAM,GAAGF,SAAS,CAACE,MAAM,EAAE;MACpD;MACA,MAAMC,OAAO,GAAG,EAAE;MAClB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,SAAS,CAACE,MAAM,EAAE,EAAEE,CAAC,EAAE;QACzC,IAAI,CAACH,SAAS,CAACG,CAAC,CAAC,IAAIH,SAAS,CAACG,CAAC,CAAC,CAACF,MAAM,KAAK,CAAC,EAAE;UAC9CC,OAAO,CAACE,IAAI,CAACD,CAAC,CAAC;QACjB;MACF;MACA,IAAID,OAAO,CAACD,MAAM,GAAG,CAAC,EAAE;QACtBzB,cAAc,CAAC0B,OAAO,CAAC;QACvB7D,YAAY,CAACgE,SAAS,CAAC,CAAC;QACxBC,UAAU,CAAC,MAAM9B,cAAc,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;MAC3C;IACF;IACA;IACA,IAAIuB,SAAS,EAAE;MACb,MAAMQ,aAAa,GAAG,EAAE;MACxB;MACA,KAAK,IAAIJ,CAAC,GAAGJ,SAAS,CAACE,MAAM,EAAEE,CAAC,GAAGH,SAAS,CAACC,MAAM,EAAE,EAAEE,CAAC,EAAE;QACxD,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,SAAS,CAACG,CAAC,CAAC,CAACF,MAAM,EAAE,EAAEO,CAAC,EAAE;UAC5CD,aAAa,CAACH,IAAI,CAAC,GAAGD,CAAC,IAAIK,CAAC,EAAE,CAAC;QACjC;MACF;MACA;MACA,IAAIT,SAAS,CAACE,MAAM,GAAG,CAAC,IAAID,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;QAChD,IAAIQ,UAAU,GAAGV,SAAS,CAACE,MAAM,GAAG,CAAC;QACrC,IAAIS,OAAO,GAAGX,SAAS,CAACU,UAAU,CAAC,CAACR,MAAM;QAC1C,IAAIU,MAAM,GAAGX,SAAS,CAACS,UAAU,CAAC,CAACR,MAAM;QACzC,KAAK,IAAIO,CAAC,GAAGE,OAAO,EAAEF,CAAC,GAAGG,MAAM,EAAE,EAAEH,CAAC,EAAE;UACrCD,aAAa,CAACH,IAAI,CAAC,GAAGK,UAAU,IAAID,CAAC,EAAE,CAAC;QAC1C;QACA;QACA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGI,IAAI,CAACC,GAAG,CAACH,OAAO,EAAEC,MAAM,CAAC,EAAE,EAAEH,CAAC,EAAE;UAClD,IAAIT,SAAS,CAACU,UAAU,CAAC,CAACD,CAAC,CAAC,KAAK,IAAI,IAAIR,SAAS,CAACS,UAAU,CAAC,CAACD,CAAC,CAAC,KAAK,IAAI,EAAE;YAC1ED,aAAa,CAACH,IAAI,CAAC,GAAGK,UAAU,IAAID,CAAC,EAAE,CAAC;UAC1C;QACF;MACF;MACA,IAAID,aAAa,CAACN,MAAM,GAAG,CAAC,EAAE;QAC5B3B,aAAa,CAACiC,aAAa,CAAC;QAC5BlE,YAAY,CAACyE,GAAG,CAAC,CAAC;QAClBR,UAAU,CAAC,MAAMhC,aAAa,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;MAC1C;IACF;IACA;IACAK,YAAY,CAACa,OAAO,GAAGQ,SAAS,CAACN,GAAG,CAACC,GAAG,IAAI,CAAC,GAAGA,GAAG,CAAC,CAAC;EACvD,CAAC,EAAE,CAACpC,IAAI,CAAC,CAAC;;EAEV;EACA,MAAMwD,eAAe,GAAGA,CAACpB,GAAG,EAAEqB,GAAG,KAAK;IACpC,IAAI,CAACzD,IAAI,IAAIA,IAAI,CAACkC,KAAK,CAACE,GAAG,CAAC,CAACqB,GAAG,CAAC,KAAK,IAAI,EAAE;IAC5C3E,YAAY,CAAC+C,MAAM,CAAC,CAAC;IACrB,MAAM6B,OAAO,GAAG,GAAGtB,GAAG,IAAIqB,GAAG,EAAE;IAC/B,MAAME,iBAAiB,GAAGzD,aAAa,CAAC0D,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAKJ,OAAO,CAAC;IAC1E,IAAIC,iBAAiB,EAAE;MACrB7E,YAAY,CAACgD,KAAK,CAAC,CAAC;MACpB3B,gBAAgB,CAACD,aAAa,CAAC6D,MAAM,CAACF,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAKJ,OAAO,CAAC,CAAC;IACtE,CAAC,MAAM;MACL5E,YAAY,CAACkF,GAAG,CAAC,CAAC;MAClB,MAAMC,WAAW,GAAG,CAAC,GAAG/D,aAAa,EAAE;QAAEkC,GAAG;QAAEqB,GAAG;QAAEK,GAAG,EAAEJ,OAAO;QAAElC,KAAK,EAAExB,IAAI,CAACkC,KAAK,CAACE,GAAG,CAAC,CAACqB,GAAG;MAAE,CAAC,CAAC;MAC/F,IAAIQ,WAAW,CAACvB,MAAM,KAAK,CAAC,EAAE;QAC5B,MAAM,CAACpB,KAAK,EAAEC,KAAK,CAAC,GAAG0C,WAAW;QAClC,IAAI5C,SAAS,CAACC,KAAK,EAAEC,KAAK,CAAC,EAAE;UAC3BzC,YAAY,CAACoF,OAAO,CAAC,CAAC;UACtBrD,eAAe,CAAC,CAACS,KAAK,CAACwC,GAAG,EAAEvC,KAAK,CAACuC,GAAG,CAAC,CAAC;UACvCf,UAAU,CAAC,MAAMlC,eAAe,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;UAC1CsD,YAAY,CAAC,CAAC7C,KAAK,CAACc,GAAG,EAAEd,KAAK,CAACmC,GAAG,CAAC,EAAE,CAAClC,KAAK,CAACa,GAAG,EAAEb,KAAK,CAACkC,GAAG,CAAC,CAAC;UAC5DtD,gBAAgB,CAAC,EAAE,CAAC;QACtB,CAAC,MAAM;UACLrB,YAAY,CAACwD,KAAK,CAAC,CAAC;UACpB7B,aAAa,CAAC,IAAI,CAAC;UACnBsC,UAAU,CAAC,MAAMtC,aAAa,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC;UAC3CN,gBAAgB,CAAC,EAAE,CAAC;QACtB;MACF,CAAC,MAAM;QACLA,gBAAgB,CAAC8D,WAAW,CAAC;MAC/B;IACF;EACF,CAAC;;EAED;EACA,MAAME,YAAY,GAAGA,CAACC,IAAI,EAAEC,IAAI,KAAK;IACnC,MAAMC,QAAQ,GAAG,GAAGF,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,EAAE;IACxC,MAAMG,QAAQ,GAAG,GAAGF,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,EAAE;IACxC1D,eAAe,CAAC,CAAC2D,QAAQ,EAAEC,QAAQ,CAAC,CAAC;IACrC7F,aAAa,CAACsB,IAAI,EAAEoE,IAAI,EAAEC,IAAI,CAAC,CAC5BtC,IAAI,CAAEC,IAAI,IAAK;MACdlD,YAAY,CAAC0F,MAAM,CAAC,CAAC;MACrBvE,OAAO,CAAC+B,IAAI,CAAC;MACbe,UAAU,CAAC,MAAMpC,eAAe,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;MAC1C,IAAIqB,IAAI,CAACyC,QAAQ,EAAE;QACjB3F,YAAY,CAAC4F,GAAG,CAAC,CAAC;QAClB3B,UAAU,CAAC,MAAM4B,KAAK,CAAC,cAAc,CAAC,EAAE,GAAG,CAAC;MAC9C;IACF,CAAC,CAAC,CACDtC,KAAK,CAAC,MAAOC,KAAK,IAAK;MACtB,IAAIsC,OAAO,GAAG,aAAa;MAC3B,IAAItC,KAAK,IAAIA,KAAK,CAACuC,QAAQ,EAAE;QAC3B,IAAI;UACF,MAAMC,OAAO,GAAG,MAAMxC,KAAK,CAACuC,QAAQ,CAACE,IAAI,CAAC,CAAC;UAC3C,IAAID,OAAO,IAAIA,OAAO,CAACE,MAAM,EAAEJ,OAAO,GAAGE,OAAO,CAACE,MAAM;QACzD,CAAC,CAAC,MAAM,CAAC;MACX;MACAL,KAAK,CAACC,OAAO,CAAC;MACdzE,gBAAgB,CAAC,EAAE,CAAC;MACpBQ,eAAe,CAAC,EAAE,CAAC;IACrB,CAAC,CAAC;EACN,CAAC;;EAED;EACA,MAAMsE,SAAS,GAAGA,CAAA,KAAM;IACtBnG,YAAY,CAAC+C,MAAM,CAAC,CAAC;IACrB/C,YAAY,CAACgD,KAAK,CAAC,CAAC;IACpBnD,UAAU,CAACqB,IAAI,CAAC,CAAC+B,IAAI,CAAEC,IAAI,IAAK;MAC9B/B,OAAO,CAAC+B,IAAI,CAAC;IACf,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMkD,cAAc,GAAGA,CAAC9C,GAAG,EAAEqB,GAAG,KAAK;IACnC,OAAOvD,aAAa,CAAC0D,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACzB,GAAG,KAAKA,GAAG,IAAIyB,IAAI,CAACJ,GAAG,KAAKA,GAAG,CAAC;EACzE,CAAC;EAED,IAAIrD,SAAS,EAAE,oBAAOpB,OAAA;IAAKI,SAAS,EAAC,SAAS;IAAAE,QAAA,EAAC;EAAU;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE/D,oBACEZ,OAAA;IAAKI,SAAS,EAAC,KAAK;IAAAE,QAAA,gBAElBN,OAAA;MACEI,SAAS,EAAE,mBAAmB8B,OAAO,GAAG,EAAE,GAAG,YAAY,EAAG;MAC5D7B,OAAO,EAAEoC,WAAY;MACrB0D,KAAK,EAAEjE,OAAO,GAAG,QAAQ,GAAG,QAAS;MACrC,cAAYA,OAAO,GAAG,QAAQ,GAAG,QAAS;MAAA5B,QAAA,EAEzC4B,OAAO,GAAG,IAAI,GAAG;IAAI;MAAAzB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eAETZ,OAAA;MACEI,SAAS,EAAC,WAAW;MACrBC,OAAO,EAAEA,CAAA,KAAM;QACbP,YAAY,CAAC+C,MAAM,CAAC,CAAC;QACrB/C,YAAY,CAACgD,KAAK,CAAC,CAAC;QACpBvB,YAAY,CAAC,IAAI,CAAC;MACpB,CAAE;MACF4E,KAAK,EAAC,aAAa;MAAA7F,QAAA,EACpB;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTZ,OAAA,CAACC,cAAc;MAACC,IAAI,EAAEoB,SAAU;MAACnB,OAAO,EAAEA,CAAA,KAAMoB,YAAY,CAAC,KAAK;IAAE;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvEZ,OAAA;MAAII,SAAS,EAAC,YAAY;MAAAE,QAAA,EAAC;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3CZ,OAAA;MAAKI,SAAS,EAAC,cAAc;MAAAE,QAAA,gBAC3BN,OAAA;QAAQI,SAAS,EAAC,iBAAiB;QAACC,OAAO,EAAEuC,YAAa;QAAAtC,QAAA,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC3EI,IAAI,iBAAIhB,OAAA,CAACH,QAAQ;QAACuG,SAAS,EAAEpF,IAAI,CAACqF,cAAe;QAACC,KAAK,EAAEL;MAAU;QAAAxF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC,eACNZ,OAAA,CAACJ,KAAK;MACJsD,KAAK,EAAE,CAAAlC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEkC,KAAK,KAAI,EAAG;MACzBqD,WAAW,EAAE/B,eAAgB;MAC7BtD,aAAa,EAAEA,aAAc;MAC7BgF,cAAc,EAAEA,cAAe;MAC/B1E,UAAU,EAAEA,UAAW;MACvBE,YAAY,EAAEA,YAAa;MAC3BE,YAAY,EAAEA,YAAa;MAC3BE,UAAU,EAAEA,UAAW;MACvBE,WAAW,EAAEA;IAAY;MAAAvB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACG,EAAA,CApOuBD,GAAG;AAAA0F,GAAA,GAAH1F,GAAG;AAAA,IAAAD,EAAA,EAAA2F,GAAA;AAAAC,YAAA,CAAA5F,EAAA;AAAA4F,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}