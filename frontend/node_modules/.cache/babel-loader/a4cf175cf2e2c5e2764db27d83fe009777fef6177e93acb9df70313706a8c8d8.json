{"ast":null,"code":"// Sound effects utility using Web Audio API\nclass SoundEffects {\n  constructor() {\n    this.audioContext = null;\n    this.muted = false;\n    this.init();\n  }\n  setMuted(mute) {\n    this.muted = mute;\n  }\n\n  // Initialize audio context\n  init() {\n    try {\n      // Create audio context (needs user interaction first)\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    } catch (error) {\n      console.log('Web Audio API not supported');\n    }\n  }\n\n  // Resume audio context (required after user interaction)\n  resume() {\n    if (this.audioContext && this.audioContext.state === 'suspended') {\n      this.audioContext.resume();\n    }\n  }\n\n  // Generate a beep sound\n  beep(frequency = 800, duration = 200, type = 'sine') {\n    if (!this.audioContext || this.muted) return;\n    const oscillator = this.audioContext.createOscillator();\n    const gainNode = this.audioContext.createGain();\n    oscillator.connect(gainNode);\n    gainNode.connect(this.audioContext.destination);\n    oscillator.frequency.value = frequency;\n    oscillator.type = type;\n\n    // Fade in and out for smooth sound\n    gainNode.gain.setValueAtTime(0, this.audioContext.currentTime);\n    gainNode.gain.linearRampToValueAtTime(0.3, this.audioContext.currentTime + 0.01);\n    gainNode.gain.exponentialRampToValueAtTime(0.01, this.audioContext.currentTime + duration / 1000);\n    oscillator.start(this.audioContext.currentTime);\n    oscillator.stop(this.audioContext.currentTime + duration / 1000);\n  }\n\n  // Play success sound (ascending notes)\n  success() {\n    if (!this.audioContext || this.muted) return;\n    this.beep(523, 150, 'sine'); // C\n    setTimeout(() => this.beep(659, 150, 'sine'), 150); // E\n    setTimeout(() => this.beep(784, 300, 'sine'), 300); // G\n  }\n\n  // Play error sound (descending notes)\n  error() {\n    if (!this.audioContext || this.muted) return;\n    this.beep(784, 150, 'sawtooth'); // G\n    setTimeout(() => this.beep(659, 150, 'sawtooth'), 150); // E\n    setTimeout(() => this.beep(523, 300, 'sawtooth'), 300); // C\n  }\n\n  // Play click sound\n  click() {\n    if (this.muted) return;\n    this.beep(1000, 50, 'square');\n  }\n\n  // Play pop sound (for cell selection)\n  pop() {\n    if (this.muted) return;\n    this.beep(1200, 80, 'triangle');\n  }\n\n  // Play remove sound (for successful removal)\n  remove() {\n    if (this.muted) return;\n    this.beep(400, 100, 'sine');\n    setTimeout(() => this.beep(300, 100, 'sine'), 100);\n  }\n\n  // Play win sound (fanfare)\n  win() {\n    if (!this.audioContext || this.muted) return;\n\n    // Play a little fanfare\n    this.beep(523, 200, 'sine'); // C\n    setTimeout(() => this.beep(659, 200, 'sine'), 200); // E\n    setTimeout(() => this.beep(784, 200, 'sine'), 400); // G\n    setTimeout(() => this.beep(1047, 400, 'sine'), 600); // C (high)\n  }\n}\n\n// Create a singleton instance\nconst soundEffects = new SoundEffects();\nexport default soundEffects;","map":{"version":3,"names":["SoundEffects","constructor","audioContext","muted","init","setMuted","mute","window","AudioContext","webkitAudioContext","error","console","log","resume","state","beep","frequency","duration","type","oscillator","createOscillator","gainNode","createGain","connect","destination","value","gain","setValueAtTime","currentTime","linearRampToValueAtTime","exponentialRampToValueAtTime","start","stop","success","setTimeout","click","pop","remove","win","soundEffects"],"sources":["/Users/gil-yoonhee/PycharmProjects/number_game/frontend/src/utils/soundEffects.js"],"sourcesContent":["// Sound effects utility using Web Audio API\nclass SoundEffects {\n  constructor() {\n    this.audioContext = null;\n    this.muted = false;\n    this.init();\n  }\n\n  setMuted(mute) {\n    this.muted = mute;\n  }\n\n  // Initialize audio context\n  init() {\n    try {\n      // Create audio context (needs user interaction first)\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    } catch (error) {\n      console.log('Web Audio API not supported');\n    }\n  }\n\n  // Resume audio context (required after user interaction)\n  resume() {\n    if (this.audioContext && this.audioContext.state === 'suspended') {\n      this.audioContext.resume();\n    }\n  }\n\n  // Generate a beep sound\n  beep(frequency = 800, duration = 200, type = 'sine') {\n    if (!this.audioContext || this.muted) return;\n\n    const oscillator = this.audioContext.createOscillator();\n    const gainNode = this.audioContext.createGain();\n\n    oscillator.connect(gainNode);\n    gainNode.connect(this.audioContext.destination);\n\n    oscillator.frequency.value = frequency;\n    oscillator.type = type;\n\n    // Fade in and out for smooth sound\n    gainNode.gain.setValueAtTime(0, this.audioContext.currentTime);\n    gainNode.gain.linearRampToValueAtTime(0.3, this.audioContext.currentTime + 0.01);\n    gainNode.gain.exponentialRampToValueAtTime(0.01, this.audioContext.currentTime + duration / 1000);\n\n    oscillator.start(this.audioContext.currentTime);\n    oscillator.stop(this.audioContext.currentTime + duration / 1000);\n  }\n\n  // Play success sound (ascending notes)\n  success() {\n    if (!this.audioContext || this.muted) return;\n    \n    this.beep(523, 150, 'sine'); // C\n    setTimeout(() => this.beep(659, 150, 'sine'), 150); // E\n    setTimeout(() => this.beep(784, 300, 'sine'), 300); // G\n  }\n\n  // Play error sound (descending notes)\n  error() {\n    if (!this.audioContext || this.muted) return;\n    \n    this.beep(784, 150, 'sawtooth'); // G\n    setTimeout(() => this.beep(659, 150, 'sawtooth'), 150); // E\n    setTimeout(() => this.beep(523, 300, 'sawtooth'), 300); // C\n  }\n\n  // Play click sound\n  click() {\n    if (this.muted) return;\n    this.beep(1000, 50, 'square');\n  }\n\n  // Play pop sound (for cell selection)\n  pop() {\n    if (this.muted) return;\n    this.beep(1200, 80, 'triangle');\n  }\n\n  // Play remove sound (for successful removal)\n  remove() {\n    if (this.muted) return;\n    this.beep(400, 100, 'sine');\n    setTimeout(() => this.beep(300, 100, 'sine'), 100);\n  }\n\n  // Play win sound (fanfare)\n  win() {\n    if (!this.audioContext || this.muted) return;\n    \n    // Play a little fanfare\n    this.beep(523, 200, 'sine'); // C\n    setTimeout(() => this.beep(659, 200, 'sine'), 200); // E\n    setTimeout(() => this.beep(784, 200, 'sine'), 400); // G\n    setTimeout(() => this.beep(1047, 400, 'sine'), 600); // C (high)\n  }\n}\n\n// Create a singleton instance\nconst soundEffects = new SoundEffects();\n\nexport default soundEffects; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}