{"ast":null,"code":"var _jsxFileName = \"/Users/gil-yoonhee/PycharmProjects/number_game/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { startGame, removeNumbers, addNumbers } from \"./api/gameApi\";\nimport Board from \"./components/Board\";\nimport Controls from \"./components/Controls\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction saveToLocal(state) {\n  try {\n    // 데이터 압축: 빈 칸(null)을 제거하고 보드 크기만 저장\n    const compressedState = {\n      board: state.board.map(row => row.map(cell => cell === null ? 0 : cell) // null을 0으로 변환\n      ),\n      remaining_adds: state.remaining_adds\n    };\n    localStorage.setItem(\"numberGameState\", JSON.stringify(compressedState));\n  } catch (error) {\n    console.warn(\"Failed to save to localStorage:\", error);\n    // LocalStorage 용량 초과 시 게임 상태를 초기화\n    if (error.name === 'QuotaExceededError') {\n      localStorage.clear();\n      alert(\"게임 데이터가 너무 커졌습니다. 새 게임을 시작합니다.\");\n      window.location.reload();\n    }\n  }\n}\nfunction loadFromLocal() {\n  try {\n    const saved = localStorage.getItem(\"numberGameState\");\n    if (!saved) return null;\n    const compressedState = JSON.parse(saved);\n\n    // 압축된 데이터를 원래 형태로 복원\n    const state = {\n      board: compressedState.board.map(row => row.map(cell => cell === 0 ? null : cell) // 0을 null로 변환\n      ),\n      remaining_adds: compressedState.remaining_adds\n    };\n    return state;\n  } catch (error) {\n    console.warn(\"Failed to load from localStorage:\", error);\n    return null;\n  }\n}\nexport default function App() {\n  _s();\n  const [game, setGame] = useState(null);\n  const [selectedCells, setSelectedCells] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const saved = loadFromLocal();\n    if (saved) {\n      setGame(saved);\n      setIsLoading(false);\n    } else {\n      startGame().then(data => {\n        setGame(data);\n        saveToLocal(data);\n        setIsLoading(false);\n      }).catch(error => {\n        console.error(\"Failed to start game:\", error);\n        setIsLoading(false);\n      });\n    }\n  }, []);\n  const handleCellClick = (row, col) => {\n    if (!game || game.board[row][col] === null) return;\n    const cellKey = `${row},${col}`;\n    const isAlreadySelected = selectedCells.some(cell => cell.key === cellKey);\n    if (isAlreadySelected) {\n      // 이미 선택된 셀을 다시 클릭하면 선택 해제\n      setSelectedCells(selectedCells.filter(cell => cell.key !== cellKey));\n    } else {\n      // 새로운 셀 선택\n      const newSelected = [...selectedCells, {\n        row,\n        col,\n        key: cellKey,\n        value: game.board[row][col]\n      }];\n      if (newSelected.length === 2) {\n        // 두 개의 셀이 선택되면 제거 시도\n        const [cell1, cell2] = newSelected;\n        if (canRemove(cell1, cell2)) {\n          handleRemove([cell1.row, cell1.col], [cell2.row, cell2.col]);\n          setSelectedCells([]); // 선택 초기화\n        } else {\n          // 제거할 수 없으면 선택만 유지\n          setSelectedCells(newSelected);\n        }\n      } else {\n        setSelectedCells(newSelected);\n      }\n    }\n  };\n  const canRemove = (cell1, cell2) => {\n    // 같은 숫자이거나 합이 10인 경우\n    return cell1.value === cell2.value || cell1.value + cell2.value === 10;\n  };\n  const handleRemove = (pos1, pos2) => {\n    removeNumbers(game, pos1, pos2).then(data => {\n      setGame(data);\n      saveToLocal(data);\n    }).catch(error => {\n      console.error(\"Failed to remove numbers:\", error);\n      // 제거 실패 시 선택 초기화\n      setSelectedCells([]);\n    });\n  };\n  const handleAdd = () => {\n    addNumbers(game).then(data => {\n      setGame(data);\n      saveToLocal(data);\n    });\n  };\n  const isCellSelected = (row, col) => {\n    return selectedCells.some(cell => cell.row === row && cell.col === col);\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"game-title\",\n      children: \"Number Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      board: (game === null || game === void 0 ? void 0 : game.board) || [],\n      onCellClick: handleCellClick,\n      selectedCells: selectedCells,\n      isCellSelected: isCellSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), game && /*#__PURE__*/_jsxDEV(Controls, {\n      remaining: game.remaining_adds,\n      onAdd: handleAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bscwIhK2MPZTBPbVTg1EsyEMRVE=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","startGame","removeNumbers","addNumbers","Board","Controls","jsxDEV","_jsxDEV","saveToLocal","state","compressedState","board","map","row","cell","remaining_adds","localStorage","setItem","JSON","stringify","error","console","warn","name","clear","alert","window","location","reload","loadFromLocal","saved","getItem","parse","App","_s","game","setGame","selectedCells","setSelectedCells","isLoading","setIsLoading","then","data","catch","handleCellClick","col","cellKey","isAlreadySelected","some","key","filter","newSelected","value","length","cell1","cell2","canRemove","handleRemove","pos1","pos2","handleAdd","isCellSelected","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onCellClick","remaining","onAdd","_c","$RefreshReg$"],"sources":["/Users/gil-yoonhee/PycharmProjects/number_game/frontend/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { startGame, removeNumbers, addNumbers } from \"./api/gameApi\";\nimport Board from \"./components/Board\";\nimport Controls from \"./components/Controls\";\nimport \"./App.css\";\n\nfunction saveToLocal(state) {\n  try {\n    // 데이터 압축: 빈 칸(null)을 제거하고 보드 크기만 저장\n    const compressedState = {\n      board: state.board.map(row => \n        row.map(cell => cell === null ? 0 : cell) // null을 0으로 변환\n      ),\n      remaining_adds: state.remaining_adds\n    };\n    \n    localStorage.setItem(\"numberGameState\", JSON.stringify(compressedState));\n  } catch (error) {\n    console.warn(\"Failed to save to localStorage:\", error);\n    // LocalStorage 용량 초과 시 게임 상태를 초기화\n    if (error.name === 'QuotaExceededError') {\n      localStorage.clear();\n      alert(\"게임 데이터가 너무 커졌습니다. 새 게임을 시작합니다.\");\n      window.location.reload();\n    }\n  }\n}\n\nfunction loadFromLocal() {\n  try {\n    const saved = localStorage.getItem(\"numberGameState\");\n    if (!saved) return null;\n    \n    const compressedState = JSON.parse(saved);\n    \n    // 압축된 데이터를 원래 형태로 복원\n    const state = {\n      board: compressedState.board.map(row => \n        row.map(cell => cell === 0 ? null : cell) // 0을 null로 변환\n      ),\n      remaining_adds: compressedState.remaining_adds\n    };\n    \n    return state;\n  } catch (error) {\n    console.warn(\"Failed to load from localStorage:\", error);\n    return null;\n  }\n}\n\nexport default function App() {\n  const [game, setGame] = useState(null);\n  const [selectedCells, setSelectedCells] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const saved = loadFromLocal();\n    if (saved) {\n      setGame(saved);\n      setIsLoading(false);\n    } else {\n      startGame().then((data) => {\n        setGame(data);\n        saveToLocal(data);\n        setIsLoading(false);\n      }).catch((error) => {\n        console.error(\"Failed to start game:\", error);\n        setIsLoading(false);\n      });\n    }\n  }, []);\n\n  const handleCellClick = (row, col) => {\n    if (!game || game.board[row][col] === null) return;\n\n    const cellKey = `${row},${col}`;\n    const isAlreadySelected = selectedCells.some(cell => cell.key === cellKey);\n\n    if (isAlreadySelected) {\n      // 이미 선택된 셀을 다시 클릭하면 선택 해제\n      setSelectedCells(selectedCells.filter(cell => cell.key !== cellKey));\n    } else {\n      // 새로운 셀 선택\n      const newSelected = [...selectedCells, { row, col, key: cellKey, value: game.board[row][col] }];\n      \n      if (newSelected.length === 2) {\n        // 두 개의 셀이 선택되면 제거 시도\n        const [cell1, cell2] = newSelected;\n        if (canRemove(cell1, cell2)) {\n          handleRemove([cell1.row, cell1.col], [cell2.row, cell2.col]);\n          setSelectedCells([]); // 선택 초기화\n        } else {\n          // 제거할 수 없으면 선택만 유지\n          setSelectedCells(newSelected);\n        }\n      } else {\n        setSelectedCells(newSelected);\n      }\n    }\n  };\n\n  const canRemove = (cell1, cell2) => {\n    // 같은 숫자이거나 합이 10인 경우\n    return cell1.value === cell2.value || cell1.value + cell2.value === 10;\n  };\n\n  const handleRemove = (pos1, pos2) => {\n    removeNumbers(game, pos1, pos2).then((data) => {\n      setGame(data);\n      saveToLocal(data);\n    }).catch((error) => {\n      console.error(\"Failed to remove numbers:\", error);\n      // 제거 실패 시 선택 초기화\n      setSelectedCells([]);\n    });\n  };\n\n  const handleAdd = () => {\n    addNumbers(game).then((data) => {\n      setGame(data);\n      saveToLocal(data);\n    });\n  };\n\n  const isCellSelected = (row, col) => {\n    return selectedCells.some(cell => cell.row === row && cell.col === col);\n  };\n\n  if (isLoading) return <div className=\"loading\">Loading...</div>;\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"game-title\">Number Game</h1>\n      <Board \n        board={game?.board || []} \n        onCellClick={handleCellClick}\n        selectedCells={selectedCells}\n        isCellSelected={isCellSelected}\n      />\n      {game && <Controls remaining={game.remaining_adds} onAdd={handleAdd} />}\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}